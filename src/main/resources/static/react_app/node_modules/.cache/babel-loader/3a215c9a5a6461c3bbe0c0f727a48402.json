{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const myCartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    cart: [],\n    cUnitPrice: 0,\n    cTotalItems: 0,\n    singleProduct: {}\n  },\n  reducers: {\n    add: (state, action) => {\n      state.cart.push(action.payload);\n    },\n    remove: (state, action) => {\n      const newCart = state.cart.filter(cart => cart.id !== action.payload);\n      state.cart = newCart;\n    },\n    addUnitPrice: (state, action) => {\n      state.cUnitPrice = Number((state.cUnitPrice + action.payload).toFixed(2));\n    },\n    subUnitPrice: (state, action) => {\n      if (state.cUnitPrice > 0) {\n        state.cUnitPrice = Number((state.cUnitPrice - action.payload).toFixed(2));\n      }\n\n      state.cUnitPrice = state.cUnitPrice;\n    },\n    numberofCarts: (state, action) => {\n      state.cTotalItems = action.payload;\n    },\n    setSingleProduct: (state, action) => {\n      state.singleProduct = action.payload;\n    }\n  }\n});\nexport const {\n  add,\n  remove,\n  addUnitPrice,\n  subUnitPrice,\n  numberofCarts,\n  setSingleProduct\n} = myCartSlice.actions;\nexport default myCartSlice.reducer;","map":{"version":3,"sources":["/home/vindecode/IdeaProjects/first_springboot_rakutech/src/main/resources/static/react_app/src/features/user/myCartSlice.js"],"names":["createSlice","myCartSlice","name","initialState","cart","cUnitPrice","cTotalItems","singleProduct","reducers","add","state","action","push","payload","remove","newCart","filter","id","addUnitPrice","Number","toFixed","subUnitPrice","numberofCarts","setSingleProduct","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,OAAO,MAAMC,WAAW,GAAGD,WAAW,CAAC;AACnCE,EAAAA,IAAI,EAAC,MAD8B;AAEnCC,EAAAA,YAAY,EAAC;AACVC,IAAAA,IAAI,EAAE,EADI;AAEVC,IAAAA,UAAU,EAAC,CAFD;AAGVC,IAAAA,WAAW,EAAC,CAHF;AAIVC,IAAAA,aAAa,EAAC;AAJJ,GAFsB;AAQnCC,EAAAA,QAAQ,EAAC;AACNC,IAAAA,GAAG,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpBD,MAAAA,KAAK,CAACN,IAAN,CAAWQ,IAAX,CAAgBD,MAAM,CAACE,OAAvB;AACH,KAHK;AAINC,IAAAA,MAAM,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAkB;AACtB,YAAMI,OAAO,GAAGL,KAAK,CAACN,IAAN,CAAWY,MAAX,CAAkBZ,IAAI,IAAEA,IAAI,CAACa,EAAL,KAAUN,MAAM,CAACE,OAAzC,CAAhB;AACAH,MAAAA,KAAK,CAACN,IAAN,GAAWW,OAAX;AACH,KAPK;AAQNG,IAAAA,YAAY,EAAE,CAACR,KAAD,EAAQC,MAAR,KAAmB;AAC7BD,MAAAA,KAAK,CAACL,UAAN,GAAmBc,MAAM,CAAC,CAACT,KAAK,CAACL,UAAN,GAAmBM,MAAM,CAACE,OAA3B,EAAoCO,OAApC,CAA4C,CAA5C,CAAD,CAAzB;AACH,KAVK;AAWNC,IAAAA,YAAY,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;AAC7B,UAAGD,KAAK,CAACL,UAAN,GAAiB,CAApB,EAAsB;AACrBK,QAAAA,KAAK,CAACL,UAAN,GAAmBc,MAAM,CAAC,CAACT,KAAK,CAACL,UAAN,GAAmBM,MAAM,CAACE,OAA3B,EAAoCO,OAApC,CAA4C,CAA5C,CAAD,CAAzB;AACA;;AACDV,MAAAA,KAAK,CAACL,UAAN,GAAmBK,KAAK,CAACL,UAAzB;AACF,KAhBI;AAiBLiB,IAAAA,aAAa,EAAE,CAACZ,KAAD,EAAQC,MAAR,KAAkB;AAC7BD,MAAAA,KAAK,CAACJ,WAAN,GAAoBK,MAAM,CAACE,OAA3B;AACH,KAnBI;AAoBLU,IAAAA,gBAAgB,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAkB;AAChCD,MAAAA,KAAK,CAACH,aAAN,GAAoBI,MAAM,CAACE,OAA3B;AACH;AAtBI;AAR0B,CAAD,CAA/B;AAiCP,OAAO,MAAM;AAACJ,EAAAA,GAAD;AAAMK,EAAAA,MAAN;AAAcI,EAAAA,YAAd;AAA4BG,EAAAA,YAA5B;AAA0CC,EAAAA,aAA1C;AAAyDC,EAAAA;AAAzD,IAA6EtB,WAAW,CAACuB,OAA/F;AACP,eAAevB,WAAW,CAACwB,OAA3B","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\nexport const myCartSlice = createSlice({\n    name:'cart',\n    initialState:{\n       cart: [],\n       cUnitPrice:0,\n       cTotalItems:0,\n       singleProduct:{}\n    },\n    reducers:{\n       add: (state, action) => {\n           state.cart.push(action.payload);\n       },\n       remove: (state, action) =>{\n           const newCart = state.cart.filter(cart=>cart.id!==action.payload);\n           state.cart=newCart;\n       },\n       addUnitPrice: (state, action) => {\n           state.cUnitPrice = Number((state.cUnitPrice + action.payload).toFixed(2));\n       },\n       subUnitPrice: (state, action) => {\n           if(state.cUnitPrice>0){\n            state.cUnitPrice = Number((state.cUnitPrice - action.payload).toFixed(2));\n           }\n           state.cUnitPrice = state.cUnitPrice;\n        },\n        numberofCarts: (state, action) =>{\n            state.cTotalItems = action.payload;\n        },\n        setSingleProduct: (state, action) =>{\n            state.singleProduct=action.payload;\n        }       \n    }\n})  \nexport const {add, remove, addUnitPrice, subUnitPrice, numberofCarts, setSingleProduct} = myCartSlice.actions\nexport default myCartSlice.reducer"]},"metadata":{},"sourceType":"module"}